{"version":3,"sources":["components/input.js","components/editTodo.js","components/todo.js","components/listTodos.js","App.js","redux/actionTypes.js","redux/reducer.js","index.js"],"names":["TodoInput","handleSubmit","e","preventDefault","title","getTitle","value","data","id","Math","floor","random","editing","props","dispatch","type","className","onSubmit","this","placeholder","ref","input","Button","Component","connect","EditComponent","handleEdit","newTitle","todo","name","style","height","defaultValue","onClick","Todo","ListTodos","todos","map","state","App","ADD_TODO","EDIT_TODO","UPDATE","DELETE_TODO","reducer","action","ActionTypes","concat","filter","newName","description","newDescription","image","newImage","ConfigureStore","createStore","combineReducers","applyMiddleware","thunk","logger","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.599ccd0f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport '../App.css';\nimport { Button, Form } from 'reactstrap';\n\nclass TodoInput extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const title = this.getTitle.value;\n    const data = {\n      id: Math.floor(Math.random() * 100),\n      title,\n      editing: false,\n    };\n    this.props.dispatch({\n      type: 'ADD_TODO',\n      data,\n    });\n    this.getTitle.value = '';\n  };\n\n  render() {\n    return (\n      <form className=\"todo-form\" onSubmit={this.handleSubmit}>\n        <input placeholder=\"Add todo\" ref={(input) => (this.getTitle = input)} />\n        <Button>Add</Button>\n      </form>\n    );\n  }\n}\nexport default connect()(TodoInput);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport '../App.css';\n\nclass EditComponent extends Component {\n  handleEdit = (e) => {\n    e.preventDefault();\n    const newTitle = this.getTitle.value;\n    const data = {\n      newTitle,\n    };\n    this.props.dispatch({ type: 'UPDATE', id: this.props.todo.id, data: data });\n  };\n  render() {\n    return (\n      <form onSubmit={this.handleEdit}>\n        <ul>\n          <li>\n            <input\n              type=\"text\"\n              name=\"title\"\n              style={{ height: '40px' }}\n              ref={(input) => (this.getTitle = input)}\n              defaultValue={this.props.todo.title}\n            />\n          </li>\n          <button className=\"button-item\">Upgrade</button>\n          <button\n            className=\"button-item\"\n            type=\"button\"\n            onClick={() => this.props.dispatch({ type: 'DELETE_TODO', id: this.props.todo.id })}\n          >\n            Delete\n          </button>\n        </ul>\n      </form>\n    );\n  }\n}\nexport default connect()(EditComponent);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport '../App.css';\n\nclass Todo extends Component {\n  render() {\n    return (\n      <ul>\n        <li>{this.props.todo.title}</li>\n        <li>\n          <button onClick={() => this.props.dispatch({ type: 'EDIT_TODO', id: this.props.todo.id })}>Edit</button>\n        </li>\n      </ul>\n    );\n  }\n}\nexport default connect()(Todo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport EditComponent from './editTodo';\nimport Todo from './todo';\n\nconst mapStateToProps = (state) => {\n  return {\n    todos: state.todos,\n  };\n};\n\nclass ListTodos extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.todos.map((todo) => (\n          <div key={todo.id}>\n            {todo.editing ? <EditComponent todo={todo} key={todo.id} /> : <Todo key={todo.id} todo={todo} />}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(ListTodos);\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport TodoInput from './components/input';\nimport ListTodos from './components/listTodos';\n\nclass App extends Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const title = this.getTitle.value;\n    const data = {\n      title,\n      editing: false,\n    };\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Todo App</h1>\n        <TodoInput />\n        <ListTodos />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const ADD_TODO = 'ADD_TODO';\nexport const EDIT_TODO = 'EDIT_TODO';\nexport const UPDATE = 'UPDATE';\nexport const DELETE_TODO = 'DELETE_TODO';\n","import * as ActionTypes from './actionTypes';\nimport { TODOS } from './todo';\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_TODO:\n      return state.concat([action.data]);\n    case ActionTypes.DELETE_TODO:\n      return state.filter((todo) => todo.id !== action.id);\n    case ActionTypes.EDIT_TODO:\n      return state.map((todo) => (todo.id === action.id ? { ...todo, editing: !todo.editing } : todo));\n    case ActionTypes.UPDATE:\n      return state.map((todo) => {\n        if (todo.id === action.id) {\n          return {\n            ...todo,\n            name: action.data.newName,\n            title: action.data.newTitle,\n            description: action.data.newDescription,\n            image: action.data.newImage,\n            editing: !todo.editing,\n          };\n        } else return todo;\n      });\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './redux/reducer';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nexport const ConfigureStore = () => {\n  const store = createStore(\n    combineReducers({\n      todos: reducer,\n    }),\n    applyMiddleware(thunk, logger)\n  );\n  return store;\n};\nconst store = ConfigureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}